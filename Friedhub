--[[
  Fried Hub v5 - Football Fusion 2 - PART 1
  FULL Glowy UI Base + Tabs + Toggles + Minimize + Close
  Orange/Black Futuristic Theme
  Draggable, Animated UI
  Compatible with KRNL Mobile
  Huge, detailed, humanized codebase
--]]

-- Early protection
if game.PlaceId ~= 5136536137 then
    warn("[FriedHub] Not Football Fusion 2! Script aborted.")
    return
end
if getgenv().FriedHubLoaded then
    warn("[FriedHub] Already loaded! Aborting duplicate load.")
    return
end
getgenv().FriedHubLoaded = true

-- Services
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local CoreGui = game:GetService("CoreGui")

-- Variables
local UIS = UserInputService
local Mouse = LocalPlayer:GetMouse()

-- Character references
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local RootPart = Character:WaitForChild("HumanoidRootPart")

-- UI Helper function
local function create(className, properties)
    local obj = Instance.new(className)
    if properties then
        for k,v in pairs(properties) do
            if k == "Parent" then
                obj.Parent = v
            else
                obj[k] = v
            end
        end
    end
    return obj
end

-- Clear previous UI if exists
local oldUI = CoreGui:FindFirstChild("FriedHubUI")
if oldUI then oldUI:Destroy() end

-- Main ScreenGui
local ScreenGui = create("ScreenGui", {
    Name = "FriedHubUI",
    Parent = CoreGui,
    ResetOnSpawn = false,
    ZIndexBehavior = Enum.ZIndexBehavior.Global,
})

-- Main Frame (Draggable container)
local MainFrame = create("Frame", {
    Name = "MainFrame",
    Parent = ScreenGui,
    Size = UDim2.new(0, 720, 0, 520),
    Position = UDim2.new(0.5, -360, 0.5, -260),
    BackgroundColor3 = Color3.fromRGB(15, 15, 15),
    BorderSizePixel = 0,
    Active = true,
    Draggable = true,
})

-- Glow Stroke (Thick orange glow)
local GlowStroke = create("UIStroke", {
    Parent = MainFrame,
    Thickness = 5,
    Color = Color3.fromRGB(255, 140, 0),
    Transparency = 0.2,
    ApplyStrokeMode = Enum.ApplyStrokeMode.Border,
})

-- Title Label
local Title = create("TextLabel", {
    Parent = MainFrame,
    Size = UDim2.new(1, 0, 0, 60),
    Position = UDim2.new(0, 0, 0, 0),
    BackgroundTransparency = 1,
    Font = Enum.Font.GothamBold,
    Text = "âš¡ Fried Hub v5 - Football Fusion 2 âš¡",
    TextColor3 = Color3.fromRGB(255, 140, 0),
    TextSize = 30,
    TextStrokeTransparency = 0.75,
})

-- Close Button
local CloseBtn = create("TextButton", {
    Parent = MainFrame,
    Size = UDim2.new(0, 50, 0, 50),
    Position = UDim2.new(1, -55, 0, 5),
    BackgroundColor3 = Color3.fromRGB(70, 0, 0),
    Text = "X",
    Font = Enum.Font.GothamBold,
    TextSize = 30,
    TextColor3 = Color3.fromRGB(255, 255, 255),
    BorderSizePixel = 0,
    AutoButtonColor = false,
})

CloseBtn.MouseEnter:Connect(function()
    TweenService:Create(CloseBtn, TweenInfo.new(0.15), {BackgroundColor3 = Color3.fromRGB(255, 0, 0)}):Play()
end)
CloseBtn.MouseLeave:Connect(function()
    TweenService:Create(CloseBtn, TweenInfo.new(0.15), {BackgroundColor3 = Color3.fromRGB(70, 0, 0)}):Play()
end)
CloseBtn.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()
    getgenv().FriedHubLoaded = false
end)

-- Minimize Button
local MinimizeBtn = create("TextButton", {
    Parent = MainFrame,
    Size = UDim2.new(0, 50, 0, 50),
    Position = UDim2.new(1, -115, 0, 5),
    BackgroundColor3 = Color3.fromRGB(30, 30, 30),
    Text = "_",
    Font = Enum.Font.GothamBold,
    TextSize = 40,
    TextColor3 = Color3.fromRGB(255, 140, 0),
    BorderSizePixel = 0,
    AutoButtonColor = false,
})

MinimizeBtn.MouseEnter:Connect(function()
    TweenService:Create(MinimizeBtn, TweenInfo.new(0.15), {BackgroundColor3 = Color3.fromRGB(50, 50, 50)}):Play()
end)
MinimizeBtn.MouseLeave:Connect(function()
    TweenService:Create(MinimizeBtn, TweenInfo.new(0.15), {BackgroundColor3 = Color3.fromRGB(30, 30, 30)}):Play()
end)

-- Minimized Icon (small pumpkin emoji)
local MinimizedIcon = create("TextButton", {
    Parent = CoreGui,
    Size = UDim2.new(0, 60, 0, 60),
    Position = UDim2.new(0, 15, 0, 15),
    BackgroundColor3 = Color3.fromRGB(255, 140, 0),
    Text = "ðŸŽƒ",
    Font = Enum.Font.GothamBlack,
    TextSize = 36,
    TextColor3 = Color3.fromRGB(0, 0, 0),
    BorderSizePixel = 0,
    Visible = false,
    AutoButtonColor = true,
    Active = true,
    Draggable = true,
})

MinimizeBtn.MouseButton1Click:Connect(function()
    MainFrame.Visible = false
    MinimizedIcon.Visible = true
end)

MinimizedIcon.MouseButton1Click:Connect(function()
    MainFrame.Visible = true
    MinimizedIcon.Visible = false
end)

-- Tabs Container
local TabsHolder = create("Frame", {
    Parent = MainFrame,
    Size = UDim2.new(1, -30, 0, 60),
    Position = UDim2.new(0, 15, 0, 70),
    BackgroundTransparency = 1,
})

-- Tab Button Creator (glowy)
local function createTabButton(name, posX)
    local btn = create("TextButton", {
        Parent = TabsHolder,
        Size = UDim2.new(0, 150, 1, 0),
        Position = UDim2.new(0, posX, 0, 0),
        BackgroundColor3 = Color3.fromRGB(30, 30, 30),
        TextColor3 = Color3.fromRGB(255, 140, 0),
        Font = Enum.Font.GothamBold,
        TextSize = 20,
        Text = name,
        BorderSizePixel = 0,
        AutoButtonColor = false,
    })
    local stroke = create("UIStroke", {
        Parent = btn,
        Color = Color3.fromRGB(255, 140, 0),
        Thickness = 2,
        Transparency = 0.3,
    })

    btn.MouseEnter:Connect(function()
        stroke.Transparency = 0
        btn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    end)
    btn.MouseLeave:Connect(function()
        stroke.Transparency = 0.3
        btn.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    end)

    return btn
end

-- Tabs creation and content frames
local tabs = {}
local function createTab(name)
    local frame = create("Frame", {
        Parent = MainFrame,
        Name = name .. "Tab",
        Size = UDim2.new(1, -30, 1, -150),
        Position = UDim2.new(0, 15, 0, 140),
        BackgroundColor3 = Color3.fromRGB(10, 10, 10),
        BorderSizePixel = 0,
        Visible = false,
    })
    tabs[name] = frame
    return frame
end

local magsTab = createTab("Mags")
local visualsTab = createTab("Visuals")
local miscTab = createTab("Misc")

-- Tab buttons
local magsBtn = createTabButton("Mags", 0)
local visualsBtn = createTabButton("Visuals", 165)
local miscBtn = createTabButton("Misc", 330)

-- Show/hide tabs function
local function showTab(name)
    for k,v in pairs(tabs) do
        v.Visible = (k == name)
    end
end
showTab("Mags") -- default

magsBtn.MouseButton1Click:Connect(function() showTab("Mags") end)
visualsBtn.MouseButton1Click:Connect(function() showTab("Visuals") end)
miscBtn.MouseButton1Click:Connect(function() showTab("Misc") end)

-- Helper to create glowy toggle buttons
local function createToggle(parent, text, y, default, callback)
    local btn = create("TextButton", {
        Parent = parent,
        Size = UDim2.new(0, 280, 0, 38),
        Position = UDim2.new(0, 20, 0, y),
        BackgroundColor3 = Color3.fromRGB(40, 40, 40),
        TextColor3 = Color3.fromRGB(255, 140, 0),
        Font = Enum.Font.GothamBold,
        TextSize = 16,
        Text = text .. ": " .. (default and "ON" or "OFF"),
        BorderSizePixel = 0,
        AutoButtonColor = false,
    })
    local stroke = create("UIStroke", {
        Parent = btn,
        Color = Color3.fromRGB(255, 140, 0),
        Thickness = 2,
        Transparency = 0.7,
    })
    btn.MouseEnter:Connect(function()
        stroke.Transparency = 0
        btn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    end)
    btn.MouseLeave:Connect(function()
        stroke.Transparency = 0.7
        btn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    end)
    btn.MouseButton1Click:Connect(function()
        local on = not btn.Text:find("ON")
        btn.Text = text .. ": " .. (on and "ON" or "OFF")
        callback(on)
    end)
    return btn
end

-- Helper to create glowy slider controls
local function createSlider(parent, label, min, max, default, y, callback)
    local frame = create("Frame", {
        Parent = parent,
        Size = UDim2.new(0, 280, 0, 48),
        Position = UDim2.new(0, 20, 0, y),
        BackgroundTransparency = 1,
    })
    local labelText = create("TextLabel", {
        Parent = frame,
        Size = UDim2.new(1, 0, 0, 18),
        Position = UDim2.new(0, 0, 0, 0),
        BackgroundTransparency = 1,
        Font = Enum.Font.Gotham,
        TextSize = 15,
        TextColor3 = Color3.fromRGB(255, 140, 0),
        TextXAlignment = Enum.TextXAlignment.Left,
        Text = label .. ": " .. tostring(default),
    })
    local bar = create("Frame", {
        Parent = frame,
        Size = UDim2.new(1, 0, 0, 14),
        Position = UDim2.new(0, 0, 0, 26),
        BackgroundColor3 = Color3.fromRGB(40, 40, 40),
        BorderSizePixel = 0,
    })
    local fill = create("Frame", {
        Parent = bar,
        Size = UDim2.new((default - min) / (max - min), 0, 1, 0),
        BackgroundColor3 = Color3.fromRGB(255, 140, 0),
        BorderSizePixel = 0,
    })
    local dragging = false
    bar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            local relX = math.clamp((input.Position.X - bar.AbsolutePosition.X) / bar.AbsoluteSize.X, 0, 1)
            fill.Size = UDim2.new(relX, 0, 1, 0)
            local val = math.floor(min + (max - min) * relX)
            labelText.Text = label .. ": " .. val
            callback(val)
        end
    end)
    bar.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    bar.InputChanged:Connect(function(input)--[[
  Fried Hub v5 - Football Fusion 2 - PART 2
  Magnet System (Legit, Blatant, League, Semi)
  WalkSpeed and JumpPower toggles + sliders
  Long Arms toggle with resizing/reset
  Magnet ball pulling logic
  Full comments and polished
--]]

local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Workspace = game:GetService("Workspace")
local TweenService = game:GetService("TweenService")

local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local RootPart = Character:WaitForChild("HumanoidRootPart")

-- Sync with global settings from Part 1 (or initialize defaults)
local settings = getgenv().FriedHubSettings or {}
if next(settings) == nil then
    settings = {
        magnetEnabled = false,
        magnetMode = "Legit",
        walkSpeedEnabled = false,
        walkSpeed = 23,
        jumpPowerEnabled = false,
        jumpPower = 55,
        longArmsEnabled = false,
    }
    getgenv().FriedHubSettings = settings
end

-- Magnet modes list
local magnetModes = {"Legit", "Blatant", "League", "Semi"}

-- Magnet pull function (lerp ball toward catch hands)
local function magnetPull()
    if not settings.magnetEnabled then return end

    local ball = Workspace:FindFirstChild("Football")
    if not (ball and ball:IsA("BasePart")) then return end

    local char = LocalPlayer.Character
    if not char then return end

    local catchRight = char:FindFirstChild("CatchRight") or char:FindFirstChild("Right Arm")
    local catchLeft = char:FindFirstChild("CatchLeft") or char:FindFirstChild("Left Arm")
    if not (catchRight and catchLeft) then return end

    local targetPos = (catchRight.Position + catchLeft.Position) / 2
    local dist = (ball.Position - targetPos).Magnitude

    if dist > 35 then return end -- Magnet range limit

    local lerpFactor = 0
    if settings.magnetMode == "Legit" then
        lerpFactor = 0.22
    elseif settings.magnetMode == "Blatant" then
        lerpFactor = 0.58
    elseif settings.magnetMode == "League" then
        lerpFactor = 0.92
    elseif settings.magnetMode == "Semi" then
        lerpFactor = 0.40
    end

    -- Smoothly move ball CFrame closer to hands position
    ball.CFrame = ball.CFrame:Lerp(CFrame.new(targetPos), lerpFactor)
    ball.Velocity = Vector3.new(0, 0, 0) -- Reset velocity to prevent physics override
end

-- Apply long arms size change or reset
local function updateLongArms()
    local char = LocalPlayer.Character
    if not char then return end

    local leftArm = char:FindFirstChild("Left Arm") or char:FindFirstChild("LeftUpperArm")
    local rightArm = char:FindFirstChild("Right Arm") or char:FindFirstChild("RightUpperArm")

    if settings.longArmsEnabled then
        if leftArm then leftArm.Size = Vector3.new(4, 4, 4) end
        if rightArm then rightArm.Size = Vector3.new(4, 4, 4) end
    else
        if leftArm then leftArm.Size = Vector3.new(1, 2, 1) end
        if rightArm then rightArm.Size = Vector3.new(1, 2, 1) end
    end
end

-- Update walk speed and jump power according to toggles
local function updateMovement()
    if settings.walkSpeedEnabled then
        Humanoid.WalkSpeed = settings.walkSpeed
    else
        Humanoid.WalkSpeed = 16 -- Default Roblox walk speed
    end

    if settings.jumpPowerEnabled then
        Humanoid.JumpPower = settings.jumpPower
    else
        Humanoid.JumpPower = 50 -- Default jump power
    end
end

-- Loop to update magnet, long arms, and movement every frame
RunService.RenderStepped:Connect(function()
    magnetPull()
    updateLongArms()
    updateMovement()
end)

print("[FriedHub] Part 2 loaded: Magnet system, movement, long arms active")

--[[ 
  Additional: You can connect GUI toggles to update settings
  For example, your magnet toggle button's callback:
    function(enabled) settings.magnetEnabled = enabled end
  And magnet mode cycling button callback:
    cycle magnetModes and update settings.magnetMode accordingly
--]]
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local relX = math.clamp((input.Position.X - bar.AbsolutePosition.X) / bar.AbsoluteSize.X, 0, 1)
            fill.Size = UDim2.new(relX, 0, 1, 0)--[[
  Fried Hub v5 - Football Fusion 2 - PART 3
  BallPath prediction visualization with neon parts
  Ball ESP with glowy floating labels
  Low graphics mode toggle (disable effects, shadows)
  Auto rejoin on death or teleport
  Final polish, minimize toggle enhancements
  Full comments and humanized
--]]

local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Workspace = game:GetService("Workspace")
local TeleportService = game:GetService("TeleportService")
local Lighting = game:GetService("Lighting")

local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local RootPart = Character:WaitForChild("HumanoidRootPart")

local settings = getgenv().FriedHubSettings or {}
if next(settings) == nil then
    settings = {
        ballPathEnabled = true,
        ballESPEnabled = true,
        lowGraphicsEnabled = false,
        -- plus all others
    }
    getgenv().FriedHubSettings = settings
end

-- BALL PATH PREDICTION --

local BallPathParts = {} -- Hold neon spheres representing predicted ball path

local function clearBallPath()
    for _, part in pairs(BallPathParts) do
        if part and part.Parent then part:Destroy() end
    end
    BallPathParts = {}
end

local function createBallPathPart(pos)
    local part = Instance.new("Part")
    part.Anchored = true
    part.CanCollide = false
    part.Material = Enum.Material.Neon
    part.Color = Color3.fromRGB(255, 140, 0)
    part.Size = Vector3.new(0.5, 0.5, 0.5)
    part.CFrame = CFrame.new(pos)
    part.Parent = Workspace
    return part
end

-- Predict ball trajectory function
local function updateBallPath()
    clearBallPath()

    if not settings.ballPathEnabled then return end

    local ball = Workspace:FindFirstChild("Football")
    if not (ball and ball:IsA("BasePart")) then return end

    local velocity = ball.Velocity
    local position = ball.Position

    local timeStep = 0.15
    local gravity = Vector3.new(0, workspace.Gravity, 0)
    local numPoints = 20

    for i = 1, numPoints do
        local t = i * timeStep
        local predictedPos = position + velocity * t + 0.5 * gravity * (t^2)
        local part = createBallPathPart(predictedPos)
        table.insert(BallPathParts, part)
    end
end

RunService.RenderStepped:Connect(function()
    updateBallPath()
end)

-- BALL ESP --

local espBillboard = nil

local function createESP()
    local ball = Workspace:FindFirstChild("Football")
    if not (ball and ball:IsA("BasePart")) then return end

    if espBillboard then espBillboard:Destroy() end

    espBillboard = Instance.new("BillboardGui")
    espBillboard.Name = "BallESP"
    espBillboard.Adornee = ball
    espBillboard.Size = UDim2.new(0, 150, 0, 50)
    espBillboard.AlwaysOnTop = true

    local textLabel = Instance.new("TextLabel")
    textLabel.Parent = espBillboard
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.Text = "Football"
    textLabel.TextColor3 = Color3.fromRGB(255, 140, 0)
    textLabel.Font = Enum.Font.GothamBold
    textLabel.TextStrokeTransparency = 0
    textLabel.TextSize = 24
    textLabel.TextScaled = true

    espBillboard.Parent = Workspace.CurrentCamera
end

local function removeESP()
    if espBillboard then
        espBillboard:Destroy()
        espBillboard = nil
    end
end

RunService.Heartbeat:Connect(function()
    if settings.ballESPEnabled then
        if not espBillboard then createESP() end
    else
        if espBillboard then removeESP() end
    end
end)

-- LOW GRAPHICS MODE --

local function setLowGraphics(enabled)
    if enabled then
        -- Remove all lighting effects
        for _, effect in pairs(Lighting:GetChildren()) do
            if effect:IsA("Effect") then
                effect.Enabled = false
            end
        end
        Lighting.GlobalShadows = false
        Lighting.FogEnd = 9e9
        Lighting.Brightness = 0.6
        Lighting.OutdoorAmbient = Color3.fromRGB(50, 50, 50)
    else
        -- Restore defaults (hardcoded or you can store previous states)
        Lighting.GlobalShadows = true
        Lighting.FogEnd = 1000
        Lighting.Brightness = 2
        Lighting.OutdoorAmbient = Color3.fromRGB(128, 128, 128)
        for _, effect in pairs(Lighting:GetChildren()) do
            if effect:IsA("Effect") then
                effect.Enabled = true
            end
        end
    end
end

-- Connect low graphics toggle
spawn(function()
    while wait(0.5) do
        setLowGraphics(settings.lowGraphicsEnabled)
    end
end)

-- AUTO REJOIN --

local function onCharacterDied()
    wait(3)
    local placeId = game.PlaceId
    TeleportService:Teleport(placeId, LocalPlayer)
end

Character:WaitForChild("Humanoid").Died:Connect(onCharacterDied)

-- Teleport detection auto rejoin (for teleport-to-lobby etc)
game:GetService("Players").LocalPlayer.OnTeleport:Connect(function(state)
    if state == Enum.TeleportState.Started then
        -- Optionally show notification or save data
    end
end)

-- Final print
print("[FriedHub] Part 3 loaded: BallPath, ESP, Low Graphics, Auto Rejoin active")

--[[
  To fully connect toggles from Part 1 GUI:
    - On ballPath toggle: settings.ballPathEnabled = true/false
    - On ballESP toggle: settings.ballESPEnabled = true/false
    - On low graphics toggle: settings.lowGraphicsEnabled = true/false
  All synced globally via getgenv().FriedHubSettings
--]]
