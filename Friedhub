-- Fried Hub FF2 Full Script Part 1/3
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local HttpService = game:GetService("HttpService")
local TweenService = game:GetService("TweenService")
local Workspace = game:GetService("Workspace")
local Lighting = game:GetService("Lighting")

local player = Players.LocalPlayer

-- Settings
local SETTINGS_KEY = "FriedHub_FF2_Settings"
local settings = {
    magnetEnabled = true,
    magnetMode = "Legit", -- Legit, Blatant, League (you can expand)
    autoCatch = true,
    freezeTech = false,
    freezeTime = 2,
    esp = true,
    ballPath = true,
    lowGraphics = false,
    longArms = false,
    magnetRange = 28,
    angleEnhancer = true,
    jumpBoost = true,
    antiJam = true,
    jumpPowerBoost = 10,
}

-- Save/Load
pcall(function()
    if readfile and isfile and isfile(SETTINGS_KEY) then
        local loaded = HttpService:JSONDecode(readfile(SETTINGS_KEY))
        for k,v in pairs(loaded) do settings[k] = v end
    end
end)

local function saveSettings()
    pcall(function()
        if writefile then
            writefile(SETTINGS_KEY, HttpService:JSONEncode(settings))
        end
    end)
end

-- GUI Setup
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "FriedHub_FF2"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = game.CoreGui

local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 420, 0, 460)
mainFrame.Position = UDim2.new(0.5, -210, 0.5, -230)
mainFrame.BackgroundColor3 = Color3.fromRGB(15,15,15)
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.Parent = ScreenGui

local uicorner = Instance.new("UICorner", mainFrame)
uicorner.CornerRadius = UDim.new(0, 8)

local title = Instance.new("TextLabel", mainFrame)
title.Size = UDim2.new(1, 0, 0, 40)
title.BackgroundTransparency = 1
title.Font = Enum.Font.GothamBold
title.TextSize = 24
title.TextColor3 = Color3.fromRGB(255, 140, 0)
title.Text = "FriedHub FF2 Ultimate"
title.TextStrokeTransparency = 0.6
title.TextXAlignment = Enum.TextXAlignment.Left
title.Position = UDim2.new(0, 15, 0, 0)

local tabsFrame = Instance.new("Frame", mainFrame)
tabsFrame.Size = UDim2.new(0, 110, 1, -40)
tabsFrame.Position = UDim2.new(0, 0, 0, 40)
tabsFrame.BackgroundColor3 = Color3.fromRGB(20,20,20)
tabsFrame.BorderSizePixel = 0
local tabsUICorner = Instance.new("UICorner", tabsFrame)
tabsUICorner.CornerRadius = UDim.new(0, 8)

local pagesFrame = Instance.new("Frame", mainFrame)
pagesFrame.Size = UDim2.new(1, -110, 1, -40)
pagesFrame.Position = UDim2.new(0, 110, 0, 40)
pagesFrame.BackgroundColor3 = Color3.fromRGB(20,20,20)
pagesFrame.BorderSizePixel = 0
local pagesUICorner = Instance.new("UICorner", pagesFrame)
pagesUICorner.CornerRadius = UDim.new(0, 8)

-- Tabs
local tabNames = {"Magnet", "Misc", "ESP"}
local tabs = {}
local pages = {}
local selectedTab = nil

local function selectTab(name)
    for tabName, btn in pairs(tabs) do
        btn.BackgroundColor3 = (tabName == name) and Color3.fromRGB(255, 140, 0) or Color3.fromRGB(30,30,30)
        btn.TextColor3 = (tabName == name) and Color3.new(1,1,1) or Color3.fromRGB(180,180,180)
    end
    for pageName, page in pairs(pages) do
        page.Visible = (pageName == name)
    end
    selectedTab = name
end

for i, tabName in ipairs(tabNames) do
    local btn = Instance.new("TextButton", tabsFrame)
    btn.Size = UDim2.new(1, 0, 0, 40)
    btn.Position = UDim2.new(0, 0, 0, (i-1)*40)
    btn.BackgroundColor3 = Color3.fromRGB(30,30,30)
    btn.Font = Enum.Font.GothamSemibold
    btn.TextSize = 16
    btn.Text = tabName
    btn.TextColor3 = Color3.fromRGB(180,180,180)
    btn.BorderSizePixel = 0

    btn.MouseButton1Click:Connect(function()
        selectTab(tabName)
    end)

    tabs[tabName] = btn

    local page = Instance.new("ScrollingFrame", pagesFrame)
    page.Size = UDim2.new(1, 0, 1, 0)
    page.Position = UDim2.new(0, 0, 0, 0)
    page.BackgroundTransparency = 1
    page.ScrollBarThickness = 6
    page.Visible = false
    page.CanvasSize = UDim2.new(0, 0, 0, 0)
    pages[tabName] = page
end

selectTab(tabNames[1])

-- Helper UI functions
local function createToggle(parent, text, initial, callback)
    local btn = Instance.new("TextButton", parent)
    btn.Size = UDim2.new(1, -20, 0, 30)
    btn.Position = UDim2.new(0, 10, 0, (#parent:GetChildren())*35)
    btn.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    btn.TextColor3 = Color3.new(1,1,1)
    btn.Font = Enum.Font.Gotham
    btn.TextSize = 14
    btn.AutoButtonColor = false

    local enabled = initial
    btn.Text = text .. ": " .. (enabled and "ON" or "OFF")

    btn.MouseButton1Click:Connect(function()
        enabled = not enabled
        btn.Text = text .. ": " .. (enabled and "ON" or "OFF")
        callback(enabled)
        settings[text:gsub("%s","")] = enabled
        saveSettings()
    end)
    return btn
end

local function createSlider(parent, text, initial, min, max, callback)
    local frame = Instance.new("Frame", parent)
    frame.Size = UDim2.new(1, -20, 0, 40)
    frame.Position = UDim2.new(0, 10, 0, (#parent:GetChildren())*40)

    local label = Instance.new("TextLabel", frame)
    label.Size = UDim2.new(1, 0, 0, 18)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.new(1,1,1)
    label.Font = Enum.Font.Gotham
    label.TextSize = 14
    label.Text = text .. ": " .. tostring(initial)
    label.TextXAlignment = Enum.TextXAlignment.Left

    local slider = Instance.new("TextBox", frame)
    slider.Size = UDim2.new(1, 0, 0, 18)
    slider.Position = UDim2.new(0, 0, 0, 20)
    slider.BackgroundColor3 = Color3.fromRGB(40,40,40)
    slider.TextColor3 = Color3.new(1,1,1)
    slider.Font = Enum.Font.Gotham
    slider.TextSize = 14
    slider.Text = tostring(initial)
    slider.ClearTextOnFocus = true

    slider.FocusLost:Connect(function(enterPressed)
        if enterPressed then
            local val = tonumber(slider.Text)
            if val then
                val = math.clamp(val, min, max)
                slider.Text = tostring(val)
                label.Text = text .. ": " .. val
                callback(val)
                settings[text:gsub("%s","")] = val
                saveSettings()
            else
                slider.Text = tostring(initial)
            end
        else
            slider.Text = tostring(initial)
        end
    end)
    return frame
end

-- Setup toggles & sliders on Magnet tab
createToggle(pages["Magnet"], "MagnetEnabled", settings.magnetEnabled, function(v) settings.magnetEnabled = v end)

do
    local modes = {"Legit", "Blatant", "League"}
    local modeIdx = table.find(modes, settings.magnetMode) or 1

    local dropdown = Instance.new("TextButton", pages["Magnet"])
    dropdown.Size = UDim2.new(1, -20, 0, 30)
    dropdown.Position = UDim2.new(0, 10, 0, (#pages["Magnet"]:GetChildren())*35)
    dropdown.BackgroundColor3 = Color3.fromRGB(30,30,30)
    dropdown.TextColor3 = Color3.new(1,1,1)
    dropdown.Font = Enum.Font.Gotham
    dropdown.TextSize = 14
    dropdown.Text = "Magnet Mode: " .. modes[modeIdx]

    dropdown.MouseButton1Click:Connect(function()
        modeIdx = modeIdx + 1
        if modeIdx > #modes then modeIdx = 1 end
        dropdown.Text = "Magnet Mode: " .. modes[modeIdx]
        settings.magnetMode = modes[modeIdx]
        saveSettings()
    end)
end

createToggle(pages["Magnet"], "AutoCatch", settings.autoCatch, function(v) settings.autoCatch = v end)
createToggle(pages["Magnet"], "FreezeTech", settings.freezeTech, function(v) settings.freezeTech = v end)
createSlider(pages["Magnet"], "FreezeTime", settings.freezeTime, 1, 5, function(v) settings.freezeTime = v end)
createSlider(pages["Magnet"], "MagnetRange", settings.magnetRange, 10, 80, function(v) settings.magnetRange = v end)
createToggle(pages["Magnet"], "AngleEnhancer", settings.angleEnhancer, function(v) settings.angleEnhancer = v end)

-- Misc tab
createToggle(pages["Misc"], "LowGraphics", settings.lowGraphics, function(state)
    settings.lowGraphics = state
    saveSettings()
    if state then
        for _, obj in ipairs(Workspace:GetDescendants()) do
            if obj:IsA("BasePart") then
                obj.Material = Enum.Material.SmoothPlastic
                obj.Reflectance = 0
            elseif obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                obj.Enabled = false
            end
        end
        Lighting.GlobalShadows = false
    else
        Lighting.GlobalShadows = true
    end
end)

createToggle(pages["Misc"], "LongArms", settings.longArms, function(state)
    settings.longArms = state
    saveSettings()
    local char = player.Character
    if char then
        for _, limbName in pairs({"Left Arm","Right Arm"}) do
            local limb = char:FindFirstChild(limbName)
            if limb and limb:IsA("BasePart") then
                if state then
                    limb.Size = Vector3.new(2,5,2)
                else
                    limb.Size = Vector3.new(2,2,1)
                end
            end
        end
    end
end)

-- ESP tab
createToggle(pages["ESP"], "ESP", settings.esp, function(v) settings.esp = v end)
createToggle(pages["ESP"], "BallPath", settings.ballPath, function(v) settings.ballPath = v end)

-- Add any other toggles/sliders you want similarly...

-- Mobile toggle button
local mobileToggle = Instance.new("TextButton", ScreenGui)
mobileToggle.Size = UDim2.new(0, 40, 0, 40)
mobileToggle.Position = UDim2.new(0, 10, 0, 160)
mobileToggle.BackgroundColor3 = Color3.fromRGB(255, 140, 0)
mobileToggle.Text = "F"
mobileToggle.TextColor3 = Color3.new(1, 1, 1)
mobileToggle.Visible = false

mobileToggle.MouseButton1Click:Connect(function()
    mainFrame.Visible = not mainFrame.Visible
    mobileToggle.Visible = not mainFrame.Visible
end)

-- For mobile users, auto-hide GUI on spawn or toggle with this button
mainFrame.Visible = true-- Fried Hub FF2 Full Script Part 2/3

local char = player.Character or player.CharacterAdded:Wait()
local hrp = char:WaitForChild("HumanoidRootPart")
local humanoid = char:WaitForChild("Humanoid")

-- Magnet System (semi-stealth teleport)
local function getMidpoint()
    local left = char:FindFirstChild("CatchLeft")
    local right = char:FindFirstChild("CatchRight")
    if not left or not right then return hrp.Position end
    return left.Position:Lerp(right.Position, 0.5)
end

local function magnetLoop()
    while true do
        task.wait(0.05)
        if not settings.magnetEnabled then continue end
        local ball = Workspace:FindFirstChild("Football") or Workspace:FindFirstChildWhichIsA("Tool")
        if ball and ball:IsDescendantOf(Workspace) then
            local mid = getMidpoint()
            local dist = (ball.Position - mid).Magnitude
            if dist <= settings.magnetRange then
                -- Teleport ball safely slightly in front
                local target = mid + Vector3.new(0, -1.1, -0.8)
                ball.CFrame = CFrame.new(target)
                ball.Velocity = Vector3.zero

                -- Jump boost when magnet active
                if settings.jumpBoost and humanoid then
                    humanoid.JumpPower = 50 + settings.jumpPowerBoost
                    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
                end
            end
        end
    end
end

task.spawn(magnetLoop)

-- Anti-Jam: lift player slightly if ball too close to root
task.spawn(function()
    while true do
        task.wait(0.2)
        if not settings.antiJam then continue end
        local ball = Workspace:FindFirstChild("Football") or Workspace:FindFirstChildWhichIsA("Tool")
        if ball and ball:IsDescendantOf(Workspace) then
            local dist = (ball.Position - hrp.Position).Magnitude
            if dist <= 3 then
                hrp.CFrame = hrp.CFrame * CFrame.new(0, 3, 0)
            end
        end
    end
end)-- Fried Hub FF2 Full Script Part 3/3

local Gravity = Vector3.new(0, -28, 0)
local SegmentCount = 160
local TimeStep = 0.035
local UseTrail = true

local function getTrajectory(startPos, velocity)
    local pos, vel = startPos, velocity
    local points = {pos}
    for _=1, SegmentCount do
        vel += Gravity * TimeStep
        pos += vel * TimeStep
        table.insert(points, pos)
        if pos.Y < 0 then break end
    end
    return points, pos
end

local function makeArc(points, color)
    local atts, beams = {}, {}
    for _, p in ipairs(points) do
        local a = Instance.new("Attachment")
        a.WorldPosition = p
        a.Parent = Workspace.Terrain
        table.insert(atts, a)
    end
    for i=1, #atts-1 do
        local b = Instance.new("Beam")
        b.Attachment0 = atts[i]
        b.Attachment1 = atts[i+1]
        b.Width0 = 0.85
        b.Width1 = 0.85
        b.Color = ColorSequence.new(color)
        b.Transparency = NumberSequence.new(0.02)
        b.LightEmission = 0.5
        b.Segments = 2
        b.FaceCamera = true
        b.Parent = Workspace.Terrain
        table.insert(beams, b)
    end
    return beams, atts
end

local function glowLoop(beams)
    task.spawn(function()
        local info = TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, -1, true)
        for _, b in ipairs(beams) do
            TweenService:Create(b, info, {LightEmission = 2}):Play()
        end
        while beams[1] and beams[1].Parent do task.wait() end
    end)
end

local function ringMarker(pos, color)
    local ring = Instance.new("Part")
    ring.Anchored = true
    ring.CanCollide = false
    ring.Transparency = 1
    ring.Size = Vector3.new(1, 0.1, 1)
    ring.Position = pos + Vector3.new(0, 0.1, 0)
    ring.Material = Enum.Material.Neon
    ring.Color = color
    ring.Parent = Workspace.Terrain

    local mesh = Instance.new("SpecialMesh", ring)
    mesh.MeshType = Enum.MeshType.Cylinder
    mesh.Scale = Vector3.new(0.1, 0.05, 0.1)

    TweenService:Create(mesh, TweenInfo.new(
