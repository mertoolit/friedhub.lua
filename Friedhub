--[[
    Football Fusion 2 GUI Script by a7rr4 (Fully Integrated + Low Graphics & CFrame Speed)
    Features:
    - Toggle Menu (B key + button top right)
    - Magnet Catch with Adjustable Range
    - FireTouchInterest Auto Catch (50ms spam)
    - Ball ESP (Highlight)
    - Angle Enhancer Toggle
    - Freeze Tech (Toggle + adjustable freeze seconds)
      Auto freezes player on catch for set duration
    - Ball Path Visualizer (Toggle, draws line behind football)
    - Low Graphics Mode Toggle (limits FPS ~30)
    - CFrame Speed Toggle + adjustable slider (1-80)
    - Draggable GUI top-left corner
    - No speed/jump edits
]]

local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local HttpService = game:GetService("HttpService")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer
local mouse = player:GetMouse()
local guiToggled = true

local settingsKey = "FF2_Settings"
local settings = {
    magnet = true,
    autoCatch = true,
    angle = true,
    freezeTech = false,
    freezeTime = 2,
    esp = true,
    path = true,
    lowGraphics = false,
    cframeSpeedToggle = false,
    cframeSpeed = 20,
    range = 20
}

pcall(function()
    local stored = HttpService:JSONDecode(readfile(settingsKey))
    for k,v in pairs(stored) do settings[k] = v end
end)

local function saveSettings()
    pcall(function()
        writefile(settingsKey, HttpService:JSONEncode(settings))
    end)
end

-- GUI Setup
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "FF2_GUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = game.CoreGui

local frame = Instance.new("Frame", screenGui)
frame.Size = UDim2.new(0, 320, 0, 460)
frame.Position = UDim2.new(0, 10, 0, 10) -- Top-left corner with padding
frame.BackgroundColor3 = Color3.fromRGB(42, 75, 160)
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true
frame.Name = "MainMenu"

local title = Instance.new("TextLabel", frame)
title.Size = UDim2.new(1, 0, 0, 30)
title.BackgroundTransparency = 1
title.Text = "FF2 Cheat Menu"
title.TextColor3 = Color3.new(1, 1, 1)
title.Font = Enum.Font.GothamBold
title.TextSize = 18

local yOffset = 35
local function createToggle(name, default, callback)
    local button = Instance.new("TextButton", frame)
    button.Size = UDim2.new(1, -10, 0, 30)
    button.Position = UDim2.new(0, 5, 0, yOffset)
    button.Text = name .. ": " .. (default and "ON" or "OFF")
    button.BackgroundColor3 = Color3.fromRGB(30,30,30)
    button.TextColor3 = Color3.new(1,1,1)
    button.Font = Enum.Font.Gotham
    button.TextSize = 14
    button.MouseButton1Click:Connect(function()
        default = not default
        button.Text = name .. ": " .. (default and "ON" or "OFF")
        callback(default)
        saveSettings()
    end)
    yOffset = yOffset + 35
end

local function createSliderBox(name, initialValue, minVal, maxVal, callback)
    local box = Instance.new("TextBox", frame)
    box.Position = UDim2.new(0, 5, 0, yOffset)
    box.Size = UDim2.new(1, -10, 0, 30)
    box.Text = name .. ": " .. tostring(initialValue)
    box.BackgroundColor3 = Color3.fromRGB(40,40,40)
    box.TextColor3 = Color3.new(1,1,1)
    box.ClearTextOnFocus = true
    box.Font = Enum.Font.Gotham
    box.TextSize = 14
    box.FocusLost:Connect(function()
        local val = tonumber(box.Text:match("%d+"))
        if val then
            val = math.clamp(val, minVal, maxVal)
            box.Text = name .. ": " .. val
            callback(val)
            saveSettings()
        else
            box.Text = name .. ": " .. tostring(initialValue)
        end
    end)
    yOffset = yOffset + 35
    return box
end

-- Create Toggles
createToggle("Magnet", settings.magnet, function(state) settings.magnet = state end)
createToggle("Auto Catch", settings.autoCatch, function(state) settings.autoCatch = state end)
createToggle("Angle Enhancer", settings.angle, function(state) settings.angle = state end)
createToggle("Freeze Tech", settings.freezeTech, function(state) settings.freezeTech = state end)
createToggle("Ball ESP", settings.esp, function(state) settings.esp = state end)
createToggle("Ball Path", settings.path, function(state) settings.path = state end)
createToggle("Low Graphics", settings.lowGraphics, function(state) settings.lowGraphics = state end)
createToggle("CFrame Speed", settings.cframeSpeedToggle, function(state) settings.cframeSpeedToggle = state end)

-- Create Sliders/TextBoxes
local rangeBox = createSliderBox("Magnet Range", settings.range, 5, 80, function(val) settings.range = val end)
local freezeBox = createSliderBox("Freeze Time (s)", settings.freezeTime, 1, 5, function(val) settings.freezeTime = val end)
local cframeSpeedBox = createSliderBox("CFrame Speed", settings.cframeSpeed, 1, 80, function(val) settings.cframeSpeed = val end)

-- FireTouchInterest Auto Catch + Freeze Tech
task.spawn(function()
    while true do
        if settings.lowGraphics then
            task.wait(1/30) -- limit to ~30 FPS
        else
            task.wait(0.05)
        end
        if not settings.autoCatch then continue end

        local ball = workspace:FindFirstChild("Football") or workspace:FindFirstChildWhichIsA("Part", true)
        local char = player.Character
        if not (ball and char and char:FindFirstChild("HumanoidRootPart")) then continue end

        local dist = (ball.Position - char.HumanoidRootPart.Position).Magnitude
        if dist <= settings.range then
            for _, handName in {"CatchLeft", "CatchRight"} do
                local hand = char:FindFirstChild(handName)
                if hand then
                    pcall(function()
                        firetouchinterest(ball, hand, 0)
                        firetouchinterest(ball, hand, 1)
                    end)
                end
            end

            if settings.freezeTech and char.HumanoidRootPart.Anchored == false then
                char.HumanoidRootPart.Anchored = true
                task.delay(settings.freezeTime, function()
                    if char and char:FindFirstChild("HumanoidRootPart") then
                        char.HumanoidRootPart.Anchored = false
                    end
                end)
            end
        end
    end
end)

-- Ball ESP
RunService.RenderStepped:Connect(function()
    local ball = workspace:FindFirstChild("Football")
    if settings.esp and ball and not ball:FindFirstChild("Highlight") then
        local h = Instance.new("Highlight", ball)
        h.FillColor = Color3.fromRGB(255, 255, 0)
        h.OutlineColor = Color3.fromRGB(255, 0, 0)
        h.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    end
end)

-- Ball Path Visualizer
local ballPathLine = nil
RunService.RenderStepped:Connect(function()
    local ball = workspace:FindFirstChild("Football")
    if settings.path and ball and ball:IsA("BasePart") then
        if not ballPathLine then
            ballPathLine = Instance.new("Part")
            ballPathLine.Name = "BallPathLine"
            ballPathLine.Anchored = true
            ballPathLine.CanCollide = false
            ballPathLine.Transparency = 0.5
            ballPathLine.Material = Enum.Material.Neon
            ballPathLine.Color = Color3.fromRGB(0, 255, 255)
            ballPathLine.Parent = workspace
        end

        local char = player.Character
        if char and char:FindFirstChild("HumanoidRootPart") then
            local startPos = ball.Position
            local endPos = char.HumanoidRootPart.Position
            local dist = (endPos - startPos).Magnitude
            ballPathLine.Size = Vector3.new(0.2, 0.2, dist)
            ballPathLine.CFrame = CFrame.new(startPos, endPos) * CFrame.new(0, 0, -dist/2)
            ballPathLine.Transparency = 0 -- visible
        end
    else
        if ballPathLine then
            ballPathLine.Transparency = 1 -- hide when disabled or no ball
        end
    end
end)

-- Angle Enhancer stub (you can expand this later if needed)

-- CFrame Speed application (example usage: adjust character's HumanoidRootPart CFrame lerp speed)
local lastTick = tick()
RunService.RenderStepped:Connect(function()
    if settings.cframeSpeedToggle then
        local char = player.Character
        if char and char:FindFirstChild("HumanoidRootPart") and mouse.Target then
            local hrp = char.HumanoidRootPart
            local targetCFrame = CFrame.new(hrp.Position, mouse.Hit.Position)
            -- Lerp towards mouse direction based on speed setting and delta time
            local dt = tick() - lastTick
            lastTick = tick()
            hrp.CFrame = hrp.CFrame:Lerp(targetCFrame, math.clamp(settings.cframeSpeed * dt * 0.1, 0, 1))
        end
    end
end)

-- GUI Toggle Key (B)
UserInputService.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Enum.KeyCode.B then
        guiToggled = not guiToggled
        frame.Visible = guiToggled
    end
end)

-- Toggle Menu Button top-right
local toggleBtn = Instance.new("TextButton")
toggleBtn.Name = "ToggleMenuButton"
toggleBtn.Text = "Toggle Menu"
toggleBtn.Size = UDim2.new(0, 120, 0, 35)
toggleBtn.Position = UDim2.new(1, -130, 0, 10) -- top right corner
toggleBtn.AnchorPoint = Vector2.new(0, 0)
toggleBtn.Parent = screenGui
toggleBtn.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
toggleBtn.BackgroundTransparency = 0.3
toggleBtn.TextColor3 = Color3.new(1,1,1)
toggleBtn.Font = Enum.Font.GothamSemibold
toggleBtn.TextSize = 14
toggleBtn.MouseButton1Click:Connect(function()
    guiToggled = not guiToggled
    frame.Visible = guiToggled
end)

print("FF2 Script Loaded - Low Graphics & CFrame Speed Added")
